{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","findUserById","usersFromServer","find","todosWithUser","userId","getNewId","Math","max","App","useState","setTodos","newTodoTitle","setNewTodoTitle","selectedUserId","setSelectedUserId","hasTitleError","setHasTitleError","hasUserError","setHasUserError","onSubmit","event","preventDefault","trim","newTodo","previousTodos","addNewTodo","type","value","onChange","target","placeholder","selected","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.984197f3.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ninterface Props {\n  user: User,\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const {\n    name,\n    email,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { TodoWithUser } from '../../types/TodoWithUser';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todo: TodoWithUser,\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoWithUser } from '../../types/TodoWithUser';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: TodoWithUser[],\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoWithUser } from './types/TodoWithUser';\n\nimport { TodoList } from './components/TodoList';\n\nconst findUserById = (id: number) => {\n  return usersFromServer.find(user => user.id === id) || null;\n};\n\nconst todosWithUser: TodoWithUser[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: findUserById(todo.userId),\n}));\n\nconst getNewId = (todos: TodoWithUser[]) => {\n  const maxId = Math.max(...todos.map(todo => todo.id));\n\n  return maxId + 1;\n};\n\nexport const App = () => {\n  const [todos, setTodos] = useState(todosWithUser);\n  const [newTodoTitle, setNewTodoTitle] = useState('');\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [hasUserError, setHasUserError] = useState(false);\n\n  const addNewTodo = (title: string, userId: number) => {\n    const newTodo: TodoWithUser = {\n      id: getNewId(todos),\n      title,\n      completed: false,\n      userId,\n      user: findUserById(userId),\n    };\n\n    setTodos((previousTodos) => [...previousTodos, newTodo]);\n  };\n\n  const handleFormSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!newTodoTitle.trim()) {\n      setHasTitleError(true);\n    }\n\n    if (!selectedUserId) {\n      setHasUserError(true);\n    }\n\n    if (newTodoTitle && selectedUserId) {\n      addNewTodo(newTodoTitle, selectedUserId);\n      setNewTodoTitle('');\n      setSelectedUserId(0);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        onSubmit={handleFormSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            {'Title: '}\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              value={newTodoTitle}\n              onChange={event => {\n                setNewTodoTitle(event.target.value);\n                setHasTitleError(false);\n              }}\n              placeholder=\"Enter a title\"\n            />\n          </label>\n          {hasTitleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n            <select\n              data-cy=\"userSelect\"\n              value={selectedUserId}\n              onChange={event => {\n                setSelectedUserId(+event.target.value);\n                setHasUserError(false);\n              }}\n            >\n              <option value=\"0\" selected disabled>Choose a user</option>\n              {usersFromServer.map(user => (\n                <option\n                  value={user.id}\n                  key={user.id}\n                >\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n          {hasUserError && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}